name: Deploy Laravel App

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip, pdo_mysql, sqlite3
        coverage: none
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Copy .env for testing
      run: |
        cat > .env << EOF
        APP_NAME="Global UB Test"
        APP_ENV=testing
        APP_KEY=base64:$(php -r "echo base64_encode(random_bytes(32));")
        APP_DEBUG=true
        
        DB_CONNECTION=sqlite
        DB_DATABASE=:memory:
        
        CACHE_STORE=array
        SESSION_DRIVER=array
        QUEUE_CONNECTION=sync
        EOF
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --optimize-autoloader
    
    - name: Install NPM dependencies
      run: npm ci
    
    - name: Directory Permissions
      run: chmod -R 775 storage bootstrap/cache
    
    - name: Build assets
      run: npm run build
    
    # Skip tests for now - uncomment when ready
    # - name: Run Migrations
    #   run: php artisan migrate --force
    # 
    # - name: Execute tests (Unit and Feature tests) via Pest
    #   run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          cd /var/www/global-ub
          git pull origin main
          composer install --prefer-dist --no-progress --optimize-autoloader --no-dev
          npm ci
          npm run build
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache
          sudo systemctl reload nginx
