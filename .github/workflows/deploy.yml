name: Deploy Laravel App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip, pdo_mysql
        coverage: none
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --optimize-autoloader
    
    - name: Install NPM dependencies
      run: npm ci
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 775 storage bootstrap/cache
    
    - name: Setup Testing Database
      run: |
        php artisan config:clear
        php artisan config:cache
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: testing_db
        DB_USERNAME: root
        DB_PASSWORD: root
    
    - name: Run Migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: testing_db
        DB_USERNAME: root
        DB_PASSWORD: root
    
    - name: Build assets
      run: npm run build
    
    - name: Execute tests (Unit and Feature tests) via Pest
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: testing_db
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip, pdo_mysql
        coverage: none
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --optimize-autoloader --no-dev
    
    - name: Install NPM dependencies
      run: npm ci
    
    - name: Build assets for production
      run: npm run build
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          cd /var/www/global-ub
          git pull origin main
          composer install --prefer-dist --no-progress --optimize-autoloader --no-dev
          npm ci
          npm run build
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache
          sudo systemctl reload nginx
